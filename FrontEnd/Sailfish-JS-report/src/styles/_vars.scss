/******************************************************************************
 * Copyright 2009-2019 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/

$failedTextColor: #CC2929;  
$failedBorderColor: #CC2929;
$failedBorderColorSecondary: #FFCCCC;
$failedBackgroundColor: #FFF2F2;
$failedHederColor: #FFCCCC;
$failedHeaderSecondaryBackground: #FFE6E6;
$failedSecondaryTextColor: #DF4759;

$passedTextColor: #4189D2;
$passedBorderColor: #4189D2;
$passedBorderColorSecondary: #C0E0FF;
$passedHeaderColor: #C0E0FF;
$passedBackgroundColor: #EDF6FF;
$passedHeaderSecondaryBackground: #D9ECFF;
$passedSecondaryTextColor: #76ABE3;

$conditionallyPassedTextColor: #ff822a;
$conditionallyPassedBorderColor: #FFCDA8;
$conditionallyPassedBorderColorSecondary: #FFD2B3;
$conditionallyPassedHeaderColor: #FFD2B3;
$conditionallyPassedBackgroundColor: #FFF0E6;
$conditionallyPassedHeaderSecondaryBackground: #FFE1CC;
$conditionallyPassedSecondaryTextColor: #FF8E3E;

$conditionallyFailedTextColor: #EDBD36;
$conditionallyFailedBorderColor: #EDBD36;
$conditionallyFailedBorderColorSecondary: rgba(237, 188, 54, 0.7);
$conditionallyFailedHeaderColor: #FFEBB3;
$conditionallyFailedBackgroundColor: #FFEBB3;
$conditionallyFailedHeaderSecondaryBackground: #FFF2CC;
$conditionallyFailedSecondaryTextColor: #F5D77C;

$checkpointBorderColor: #59B368;
$checkpointBackground: #effff1;

$primaryTextColor: #4A4A4A;
$secondaryTextColor: #999999;

$tableHeaderBackground: #B7B3BB;
$tableHeaderCellBorderColor: #7c7c7c;
$tableCellBorderColor: #B3B3B3;
$tableBodyBackground: rgba(255, 255, 255, 0.7);

$buttonDisabledBackground: #E0E0E0;

$defaultCardBorderColor: #666666;
$defaultCardBackground: #E0E0E0;
$defaultSelectedCardBackground: #e0e0e033;

$messageCardBackgroundColor: #F2F2F2;
$messageCardRawHoverBackground: rgba(102, 102, 102, 0.15);

$rejectedMessageLabelBackground: #FFE699;
$adminMessageLabelBackground: #7ACCCC;

$filterBackground: #A3D9A3;
$filterButtonEnabled: #3D994D;
$filterButtonDisabled: #79BF80;
$filterButtonTextColor: #FFFFFF;

$notificationBackground: #d9d9d9;

$reportHeaderBackground: #5EDAE1;
$reportInfoShadowColor: #e2e2e2;
$reportBorderColor: #D6D6D6;
$reportTitleTextColor: #7b7b7b;

$scrollbarThumbBackground: #C4C4C4;
$scrollbarTrackBackground: #F2F2F2;

$splitterColor: #C4C4C4;

$chipTextColor: #808080;

@mixin scrollbar {
    &::-webkit-scrollbar {
        background-color:rgba(0, 0, 0, 0.0);
        width:16px
    }
    
    &::-webkit-scrollbar-track {
        background-color:rgba(0, 0, 0, 0.0);
    }
    
    &::-webkit-scrollbar-thumb {
        background-color:#babac0;
        border-radius:16px;
        border:4px solid #fff;
    }
    
    &::-webkit-scrollbar-button {
        display:none;
    }
}

@mixin status-card {

    --status-primary-color: #{$primaryTextColor};
    --status-secondary-color: #{$secondaryTextColor};
    --status-primary-border-color: #{$defaultCardBorderColor};
    --status-secondary-border-color: #{$defaultCardBackground};
    --status-primary-background-color: #{$defaultCardBorderColor};
    --status-secondary-background-color: #{$defaultCardBackground};

    &.passed {
        // we can't symply assign scss variable to css variable because sass doesn't know css varible type,
        // so we use #{ ... } syntax to tell sass that we use variable as color
        // https://github.com/sass/libsass/issues/2621
        --status-primary-color: #{$passedTextColor};
        --status-secondary-color: #{$passedSecondaryTextColor};
        --status-primary-border-color: #{$passedBorderColor};
        --status-secondary-border-color: #{$passedBorderColorSecondary};
        --status-primary-background-color: #{$passedBorderColor};
        --status-secondary-background-color: #{$passedBackgroundColor};
    }

    &.failed {
        --status-primary-color: #{$failedTextColor};
        --status-secondary-color: #{$failedSecondaryTextColor};
        --status-primary-border-color: #{$failedBorderColor};
        --status-secondary-border-color: #{$failedBorderColorSecondary};
        --status-primary-background-color: #{$failedBorderColor};
        --status-secondary-background-color: #{$failedBackgroundColor};
    }
    
    &.conditionally_passed {
        --status-primary-color: #{$conditionallyPassedTextColor};
        --status-secondary-color: #{$conditionallyPassedSecondaryTextColor};
        --status-primary-border-color: #{$conditionallyPassedBorderColor};
        --status-secondary-border-color: #{$conditionallyPassedBorderColorSecondary};
        --status-primary-background-color: #{$conditionallyPassedBorderColor};
        --status-secondary-background-color: #{$conditionallyPassedBackgroundColor};
    }

    &.conditionally_failed {
        --status-primary-color: #{$conditionallyFailedTextColor};
        --status-secondary-color: #{$conditionallyFailedSecondaryTextColor};
        --status-primary-border-color: #{$conditionallyFailedBorderColor};
        --status-secondary-border-color: #{$conditionallyFailedBorderColorSecondary};
        --status-primary-background-color: #{$conditionallyFailedBorderColor};
        --status-secondary-background-color: #{$conditionallyFailedBackgroundColor};
    }
}

@mixin status-text {
    &.passed {
        color: $passedTextColor;    
    }

    &.failed {
        color: $failedTextColor;
    }

    &.conditionally_passed {
        color: $conditionallyPassedTextColor;
    }

    &.conditionally_failed {
        color: $conditionallyFailedTextColor;
    }
}

@mixin selectable-card {
    &.selected {
        border-color: $defaultCardBorderColor;
        background-color: $defaultSelectedCardBackground;
    }

    &.passed {
        background-color: $passedBackgroundColor;
        border-color: $passedBorderColor;
    }

    &.failed {
        background-color: $failedBackgroundColor;
        border-color: $failedBorderColor;
    }

    &.conditionally_passed {
        background-color: $conditionallyPassedBackgroundColor;
        border-color: $conditionallyPassedBorderColor;
    }

    &.conditionally_failed {
        background-color: $conditionallyFailedBackgroundColor;
        border-color: $conditionallyFailedBorderColor;
    }
}

@mixin unselectable {
    -webkit-touch-callout: none;
    -webkit-user-select: none; 
    -khtml-user-select: none; 
    -moz-user-select: none; 
    -ms-user-select: none; 
    user-select: none; 
}

@mixin default-table {
    table {
        border-collapse: collapse;
        border: 1px solid $tableCellBorderColor;
        table-layout: fixed;
    }

    td {
        border: 1px solid $tableCellBorderColor;
        word-break: break-word;
    }

    th {
        border: 1px solid $tableHeaderCellBorderColor;
        background-color: $tableHeaderBackground;
    }

    tbody {
        background: $tableBodyBackground;
    }
}